{"version":3,"sources":["components/AppContext.js","steps.js","components/Form.js","components/CardText.js","slideshow-R.js","components/Slide.js","components/CarouselCards.js","components/NextArrow.js","components/PrevArrow.js","benchmarksInfo.js","components/TwoDivOutline.js","components/TopButton.js","components/Tables.js","components/MainOutline.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","enablePhase","undefined","currPhase","setCurrPhase","isCurrPhase","isEnabled","useApp","useContext","stepData","step","title","description","substeps","subtitle","Form","className","class","id","rows","placeholder","type","style","classNames","loop","n","i","console","log","CardText","phase","nextPhase","useEffect","charAt","substring","length","map","data","slideshowData","num","body","comments","text","feedback","Slide","show","Object","keys","CarouselCards","props","history","useHistory","useState","curSlide","setCurSlide","index","disabled","onClick","push","NextArrow","xmlns","width","height","fill","viewBox","d","PrevArrow","benchmarkInfo","action","management","click","TwoDivOutline","document","getElementById","innerHTML","setClicked","TopButton","linkTo","Tables","INITIAL_STATE","NEXT_LINKS","NEXT_PHASE","PREV_LINKS","MainOutline","phaseEnabled","setPhaseEnabled","phaseID","prevState","Provider","value","path","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1457e09f.chunk.js","sourcesContent":["import React, { useContext } from \"react\"; \n\nexport const AppContext = React.createContext({\n        enablePhase: undefined, \n        currPhase: undefined, \n        setCurrPhase: undefined,\n        isCurrPhase: undefined, \n        isEnabled: undefined\n    }\n) \n\nexport const useApp = () => useContext(AppContext);","export const stepData = [\n    {\n      step: \"D\",\n      title: \"Define rules:\",\n      description: \"The purpose of this debrief is to help you reflect on the scenario you have just completed in order to help you improve your skills as a paramedic. This debrief will recount the actions you performed, as well as the actions indicated based on the case scenario, and will help you explore areas of discordance. The contents of this debrief are designed to identify areas for improvement and are not designed to assess your abilities as a paramedic.\",\n    },\n    {\n      step: \"E\",\n      title: \"Explain the learning objectives:\",\n      description: `This scenario was designed to give you practice with identifying and managing`,\n      substeps: [\"A patient with life-threatening bleeding\", \"A patient at risk for a cervical injury\", \"A patient who requires a definitive airway and ventilation support\", \"A patient with hemorrhagic shock\"],\n    }, \n    {\n        step: \"B\",\n        title: \"Benchmarks for performance:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"R\",\n        title: \"Review what was supposed to happen:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"I\",\n        title: \"Identify what happened & Examine why:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"F\",\n        title: \"Formalize learning:\",\n        subtitle: \"Please take a few minutes to think about and reply to these questions:\",\n        description:\"What is your key take-home point from this case? What is something you want to continue working on or do differently in the future?\",\n    }\n  ];","import React, {useEffect} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport classNames from \"classnames\";\n\n\nexport const Form = () => {\n    return (\n      <>\n        <div className=\"table-container\">\n            <div class=\"form-group shadow-textarea\">\n            <textarea class=\"form-control z-depth-1\" id=\"exampleFormControlTextarea6\" rows=\"3\" placeholder=\"Type something here...\"></textarea>\n            </div>\n            <div class=\"text-center col-md-12 mt-3 mb-2\">\n            <button type=\"button\" style={{\"width\": \"100px\"}}className={classNames(\"nav-btns\")}>Submit</button>\n            </div>\n        </div>\n      </>\n    );\n  };","import React, {useEffect} from \"react\";\nimport { stepData } from \"../steps\";\nimport { useApp } from \"./AppContext\";\nimport { Form } from \"./Form\";\n\nfunction loop(n) { \n    for (var i in stepData) {\n        if(stepData[i].step === n) {\n            console.log(stepData[i].title);\n            var retArray = [i, stepData[i].title, stepData[i].title]\n            return retArray;\n        }\n    }  \n}\n\nexport function CardText({phase, nextPhase}) {\n    const {setCurrPhase, enablePhase} = useApp();\n    useEffect(\n        () => {\n            setCurrPhase(phase);\n            enablePhase(nextPhase);\n        }, [phase, nextPhase, enablePhase, setCurrPhase]\n    ) \n    return (\n        <>\n            <p>\n                <b>{ stepData[loop(phase)[0]].title.charAt(0) }</b>\n                { stepData[loop(phase)[0]].title.substring(1, stepData[loop(phase)[0]].length) }\n            </p>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\"><b>{stepData[loop(phase)[0]].subtitle}</b></h5>\n                    <p className=\"card-text\">{stepData[loop(phase)[0]].description}</p>\n                    <ol>\n                        { phase===\"E\" && \n                            stepData[loop(phase)[0]].substeps.map((data) => (\n                            <li>{data}</li>\n                            ))\n                        }\n                        { phase===\"F\" && \n                            <Form />\n                        }\n                    </ol>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CardText;","export const slideshowData = [\n    {\n        num: \"0\",\n        title: \"SCENE SIZE-UP\", \n        body: \"In an ideal scenario, you and your partner arrive on scene and find an adult male seriously injured in a lawn mower rollover accident. A bystander is holding a towel to the man’s right lower leg, but this has not “stopped the bleed”.\",\n        comments: [ \n            {\n                text:\"manual c-spine mobilization\",\n                feedback: \"The MOI is consistent with spinal injury: the man was thrown from a height (BLS: 602)\",\n            },\n            {\n                text:\"apply a tourniquet\",\n                feedback: \"Application of a tourniquet may be the best initial option to control severe extremity bleeding…Especially when a patient has signs of hypovolemic shock...or when bleeding is profuse. (BLS-601)\",\n            }\n        ],\n    }, \n    {\n        num: \"1\",\n        title: \"PRIMARY SURVEY\",\n        body: \"You immediately direct your partner to provide manual c-spine mobilization while you apply a tourniquet to the patient’s right lower leg to stop this life-threatening hemorrhage. You provide BVM ventilation, and ultimately perform a sedated intubation to secure this patient’s airway. Your goal at this point is to get this critical patient to a Level 1 or 2 trauma center as quickly and safely as possible.\",\n        comments: [],\n    },\n    {\n        num: \"2\",\n        title: \"SECONDARY SURVEY\", \n        body: \"You direct your partner to take vitals while you perform a rapid head-to-toe assessment. After applying a cervical collar, you and your partner log roll the patient onto a long board. You cover the patient with blankets. While you retrieve and pack the patient’s amputated foot on ice, your partner fully immobilizes him.\",\n        comments: [],\n    },\n    {\n        num: \"3\",\n        title: \"TRANSFER AND TRANSPORT\",\n        body: \"You and your partner transfer the patient onto a stretcher and into the ambulance. Your partner turns up the heat and drives to the nearest Level 2 trauma center, 25 min. away.\",\n        comments: [],\n    },\n    {\n        num: \"4\",\n        title: \"ONGOING ASSESSMENT AND MANAGEMENT\",\n        body: \"You contact the receiving facility, alerting them to the patient’s condition and your ETA. While en route, you establish two large bore IV’s; reassess the patient frequently; confirm that all interventions are still working properly, modifying as necessary; and dress as many wounds as time allows.\",\n        comments: [],\n    },\n]","\nimport classNames from \"classnames\";\nimport { slideshowData } from '../slideshow-R';\n\n\nconst Slide = ({title, body, show=false}) => {\n    return(\n        <div className={classNames(\"slide\", !show && \"hidden\")}>\n            <h5 id=\"slideTitle\" className={classNames(\"card-title\",\"pageCount\")}><b>{title+1} of {Object.keys(slideshowData).length}</b></h5>\n            <p id=\"slideText\" className=\"card-text\">{body}</p>\n        </div> \n    ); \n}\nexport default Slide; ","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useApp } from './AppContext';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles.css\";\nimport Slide from \"./Slide\"; \nimport { slideshowData } from '../slideshow-R';\n\nexport function CarouselCards(props) {\n    const history = useHistory(); \n    const [curSlide, setCurSlide] = useState(0); \n    const {setCurrPhase, enablePhase} = useApp();\n    setCurrPhase(\"R\");\n    function isLastSlide() { \n        return curSlide===slideshowData.length-1;\n    }\n    function prev() { \n        if(curSlide===0) { \n            history.push('/benchmarks'); \n        } else { \n            setCurSlide(curSlide-1);\n        }\n    }\n    function next() { \n        if(isLastSlide()){ \n            history.push('/identifyAndExamine'); \n                    \n        } else { \n            setCurSlide(curSlide+1);\n            if(curSlide===slideshowData.length-2){\n                enablePhase(\"IE\");\n            }\n        }\n    }\n    return (\n        <>\n            <p><b>R</b>eview what was supposed to happen:</p>\n            <div id=\"slideshowCard\" className=\"card\">\n                <div className=\"float-container\">\n                    <div className=\"card-body, slides, float-child\">\n                        {slideshowData.map((data, index) => (\n                            <Slide key={index} title={index} body={data.body} show={index===curSlide}/>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"arrows\">\n                    <a id=\"prev\" disabled={curSlide===0} className=\"prev\" onClick={prev} >{\"<\"}</a> \n                    <a id=\"next\" disabled={curSlide===slideshowData.length-1} className=\"next\" onClick={next} >{\">\"}</a> \n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CarouselCards;\n","const NextArrow = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"currentColor\" class=\"bi bi-arrow-right-short\" viewBox=\"1 1 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z\"/>\n        </svg>  \n    );\n} \n\nexport default NextArrow; ","\n\nconst PrevArrow = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"currentColor\" class=\"bi bi-arrow-left-short\" viewBox=\"1 1 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\"/>\n        </svg>\n    );\n} \n\nexport default PrevArrow; ","export const benchmarkInfo = [\n    {\n        num: \"0\",\n        action: \"Stopped life-threatening bleeding\",\n        management: [\"Immediately recognized the need to manage severe bleeding--i.e., when first encountering the patient, during the scene size-up\",\"Immediately applied a tourniquet to the patients right leg, before doing all other actions included in the Primary Survey\",\"Applied the tourniquet as far proximally to the wound as possible\", \"Confirmed that your treatment worked i.e., by checking that bleeding stopped and pulses were absent\"],\n    },\n    {\n        num: \"1\",\n        action: \"Stabilized a potential cervical injury\",\n        management: [\"Immediately directed a team member to take manual c-spine stabilization: that is, during the scene size-up\",\"Escalated c-spine stabilization during the Secondary Survey, after assessing the neck, by applying an appropriately sized cervical collar\",\"Fully immobilized the patient prior to transport, by log-rolling the patient onto a backboard while continuing to stabilize the spine and attaching at least three straps, the CID pad, both head blocks, and CID straps\"],\n    },\n    {\n        num: \"2\",\n        action: \"Provided a definitive airway and supported ventilation\", \n        management: [\"Opened the airway with a jaw-thrust maneuver, during the Primary Survey\", \"Provided bag-valve mask ventilation with 15 LPM O2 attached\", \"Provided a definitive airway during transport, while continuing to assess and manage the patient:\"],\n    },\n    {\n        num: \"3\",\n        action: \"Managed hemorrhagic shock\", \n        management: [\"Kept the patient warm by covering him with a blanket, as soon as shock was detected, during the Primary Survey\", \"Administered supplemental O2\", \"Established two large-bore IVs and bolus NS fluids to a goal BP systolic 90, as soon as possible during transport\"],\n    }\n  ];","import React, {useEffect} from \"react\";\nimport { stepData } from \"../steps\";\nimport { benchmarkInfo } from \"../benchmarksInfo\"; \nimport {\n    Link\n  } from \"react-router-dom\";\nimport { useApp } from \"./AppContext\";\n\nvar click = 0; \n\nexport function TwoDivOutline(props) {\n    const {setCurrPhase, enablePhase} = useApp();\n    useEffect(\n        () => {\n            setCurrPhase(\"B\");\n        }, []\n    ) \n    function setClicked(n){ \n        click = n; \n        document.getElementById(\"descriptionCard\").innerHTML = \"\"; \n        document.getElementById(\"descriptionCardTitle\").innerHTML = `<u>${benchmarkInfo[click].action}</u>` + \":\";\n        for(var i = 0; i<benchmarkInfo[click].management.length; i++){\n            document.getElementById(\"descriptionCard\").innerHTML += `<li> ${benchmarkInfo[click].management[i]}</li>`;\n        }\n        if(n==benchmarkInfo.length-1){\n            enablePhase(\"R\");\n        }\n    }\n    return (\n        <>\n            <p>Performance <b>B</b>enchmarks:</p>\n            <div class=\"container\">\n                <div class=\"card-group\">\n                    <div class=\"card\">\n                        <div class=\"card-block\">\n                            <div class=\"card-body\">\n                                <p class=\"card-title\">Below are management actions you were supposed to perform in this scenario:</p>\n                                <p class=\"card-text\">\n                                    <ol>{ benchmarkInfo.map((data, index) => \n                                        (<Link><li onClick={() => setClicked(index)} style={{\"color\": \"black\"}}><u>{data.action}</u></li></Link>))}\n                                    </ol>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card\" style={{\"flex-grow\": \"2\", \"margin-left\":\"20px\", \"margin-right\":\"20px\"}}>\n                        <div class=\"card-block\">\n                            <div class=\"card-body>\">\n                                <p>Click on a management action to see performance benchmarks for this action:</p>\n                                <p id=\"descriptionCardTitle\" class=\"card-title\"></p>\n                                <ol id=\"descriptionCard\"></ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default TwoDivOutline;","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n    useHistory\n  } from \"react-router-dom\";\nimport { useApp } from './AppContext';\nimport \"../styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst TopButton = ({phase, linkTo}) => {\n    const history = useHistory();\n    const {isCurrPhase, isEnabled} = useApp(); \n    const clickHandler = () => { \n        history.push(linkTo);\n    }\n    return (\n        <li className={classNames(\"phaseTabs\", {})}>\n            <button \n                className={classNames(\"btn\", \"btn-primary\", {\"btn-disabled\":!isEnabled(phase), \"currPhase\":isCurrPhase(phase)} )} \n                onClick={clickHandler}>{phase}\n            </button>\n        </li>\n    );\n} \n\nexport default TopButton; ","import React, {useEffect} from \"react\";\nimport { tableData } from \"../data\";\nimport classNames from \"classnames\";\nimport { useApp } from \"./AppContext\";\nimport Slide from \"./Slide\";\n\n\n\nexport const Tables = ({phase, nextPhase}) => {\n  const {setCurrPhase, enablePhase} = useApp();\n\n    useEffect(\n      () => {\n          setCurrPhase(phase);\n          enablePhase(nextPhase);\n      }, [phase, nextPhase]\n  ) \n    return (\n      <>\n        <p><b>I</b>dentify and <b>E</b>xplain:</p>\n        <div className=\"table-container\">\n        <div id=\"slideshowCard\" className=\"card\">\n                <div className=\"float-container\">\n                    <div className=\"card-body, slides, float-child\">\n                    <div className={classNames(\"slide\")}>\n                      <h5 id=\"slideTitle\" className={classNames(\"card-title\")}>Needs implemented</h5>\n                      <p id=\"slideText\" className=\"card-text\">Needs implemented</p>\n                  </div> \n                    </div> \n                </div>\n          </div>\n           {/* Step: {tableData.table0[0].step} */}\n        </div>\n      </>\n    );\n  };","import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport { AppContext } from \"./AppContext\";\nimport \"../styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CardText } from \"./CardText.js\"\nimport CarouselCards from \"./CarouselCards.js\"\nimport NextArrow from \"./NextArrow\";\nimport PrevArrow from \"./PrevArrow\";\nimport { TwoDivOutline } from \"./TwoDivOutline.js\"\nimport TopButton from \"./TopButton\";\nimport { Tables } from \"./Tables\";\n\nconst INITIAL_STATE={\n  \"D\": false, \n  \"E\": false, \n  \"B\": false, \n  \"R\": false, \n  \"IE\": false, \n  \"F\": false      \n}\nconst NEXT_LINKS={\n  \"D\": \"/explain\", \n  \"E\": \"/benchmarks\", \n  \"B\": \"/review\", \n  \"R\": \"/identifyAndExamine\", \n  \"IE\": \"/formalize\", \n  \"F\": \"/formalize\"      \n}\nconst NEXT_PHASE={\n  \"D\": \"E\", \n  \"E\": \"B\", \n  \"B\": \"R\", \n  \"R\": \"IE\", \n  \"IE\": \"F\", \n  \"F\": \"\"      \n}\nconst PREV_LINKS={\n  \"D\": \"/define\", \n  \"E\": \"/define\", \n  \"B\": \"/explain\", \n  \"R\": \"/benchmarks\", \n  \"IE\": \"/review\", \n  \"F\": \"/identifyAndExamine\"      \n}\nexport const MainOutline = () => {\n    const [currPhase, setCurrPhase] = useState(null);\n    const [phaseEnabled, setPhaseEnabled] = useState(INITIAL_STATE);\n    function enablePhase(phaseID){ setPhaseEnabled(prevState=> ( { ...prevState, [phaseID]:true } ))}\n    function isCurrPhase(phaseID) { \n      return currPhase===phaseID;\n    }\n    function enablePhase(phaseID){ setPhaseEnabled(prevState=> ( { ...prevState, [phaseID]:true } ))}\n    function isEnabled(phaseID){ \n      return phaseEnabled[phaseID];\n    }\n    useEffect( \n      () => {\n        enablePhase(\"D\");\n      }, []\n    )\n    return (\n        <Router>\n          <AppContext.Provider\n              value={{\n                enablePhase: enablePhase,\n                currPhase: currPhase, \n                setCurrPhase: setCurrPhase, \n                isCurrPhase: isCurrPhase, \n                isEnabled: isEnabled\n              }}\n          >\n          <div className=\"outline-container\">\n            <nav>\n             <div>\n                <ul>\n                    <TopButton phase=\"D\" linkTo=\"/define\"/>\n                    <NextArrow />\n                    <TopButton phase=\"E\" linkTo=\"/explain\"/>\n                    <NextArrow />\n                    <TopButton phase=\"B\" linkTo=\"/benchmarks\"/>\n                    <NextArrow />\n                    <TopButton phase=\"R\" linkTo=\"/review\"/>\n                    <NextArrow />\n                    <TopButton phase=\"IE\" linkTo=\"/identifyAndExamine\"/>\n                    <NextArrow />\n                    <TopButton phase=\"F\" linkTo=\"/formalize\"/>\n                </ul>\n              </div>\n            </nav>\n            \n            <Switch>\n              <Route path=\"/define\">\n                <CardText phase=\"D\" nextPhase=\"E\"/>\n              </Route>\n              <Route path=\"/explain\">\n                <CardText phase=\"E\" nextPhase=\"B\"/>\n              </Route>\n              <Route path=\"/benchmarks\">\n                <TwoDivOutline phase=\"B\" nextPhase=\"R\"/>\n              </Route>\n              <Route path=\"/review\">\n                <CarouselCards nextPhase=\"IE\"/>\n              </Route>\n              <Route path=\"/identifyAndExamine\">\n                <Tables phase=\"IE\" nextPhase=\"F\"/>\n              </Route>\n              <Route path=\"/formalize\">\n                <CardText phase=\"F\" />\n              </Route>\n            </Switch>\n            { currPhase!=null &&\n              <div className=\"arrows\">\n                <Link className={classNames({\"link-disabled\":currPhase===\"D\"})} to={PREV_LINKS[currPhase]}><button className={classNames(\"nav-btns\", {\"btn-disabled\":currPhase===\"D\"})}><PrevArrow/>BACK</button></Link>\n                <Link className={classNames({\"link-disabled\":!isEnabled(NEXT_PHASE[currPhase])})} to={NEXT_LINKS[currPhase]}><button className={classNames(\"nav-btns\",  {\"btn-disabled\":!isEnabled(NEXT_PHASE[currPhase])})}>NEXT<NextArrow/></button></Link>\n              </div>\n            }\n          </div>\n          </AppContext.Provider>\n        </Router>\n      );\n  };","import React from \"react\"\n\n\n//import { AuthProvider, PrivateRoute } from \"@meddbriefer/mdb-auth\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./styles.css\";\nimport { MainOutline } from \"./components/MainOutline\"\n\n\n\nconst App = (props) => {\n    return(\n        <div className=\"outline-container\">\n            <p>Self Debrief</p>\n            <p>Click the buttons below to navigate through the debrief.</p>\n            <MainOutline />\n        </div>\n    )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}