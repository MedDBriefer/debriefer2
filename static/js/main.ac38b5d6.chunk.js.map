{"version":3,"sources":["steps.js","components/CardText.js","benchmarksInfo.js","components/TwoDivOutline.js","components/MainOutline.js","App.js","reportWebVitals.js","index.js"],"names":["stepData","step","title","description","substeps","subtitle","loop","n","i","console","log","CardText","props","name","charAt","substring","length","className","map","data","benchmarkInfo","action","management","TwoDivOutline","class","style","MainOutline","to","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAaA,G,kBAAW,CACpB,CACEC,KAAM,IACNC,MAAO,gBACPC,YAAa,mcAEf,CACEF,KAAM,IACNC,MAAO,mCACPC,YAAY,gFACZC,SAAU,CAAC,2CAA4C,0CAA2C,qEAAsE,qCAE1K,CACIH,KAAM,IACNC,MAAO,8BACPC,YAAY,qBAEhB,CACIF,KAAM,IACNC,MAAO,sCACPC,YAAY,qBAEhB,CACIF,KAAM,IACNC,MAAO,wCACPC,YAAY,qBAEhB,CACIF,KAAM,IACNC,MAAO,sBACPG,SAAU,8DACVF,YAAY,yI,OC3BpB,SAASG,EAAKC,GAEV,IAAK,IAAIC,KADTC,QAAQC,IAAI,YAAcH,GACZP,EAAU,CAEpB,GADAS,QAAQC,IAAIV,EAASQ,GAAGP,KAAO,YAAcM,GAC1CP,EAASQ,GAAGP,MAAQM,EAInB,OAHAE,QAAQC,IAAIV,EAASQ,GAAGN,OACT,CAACM,EAAGR,EAASQ,GAAGN,MAAOF,EAASQ,GAAGN,QAOvD,SAASS,EAASC,GACrB,OACI,qCACA,8BAAG,4BAAIZ,EAASM,EAAKM,EAAMC,MAAM,IAAIX,MAAMY,OAAO,KAAQd,EAASM,EAAKM,EAAMC,MAAM,IAAIX,MAAMa,UAAU,EAAGf,EAASM,EAAKM,EAAMC,MAAM,IAAIG,WACzI,qBAAKC,UAAU,OAAf,SACA,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA2B,4BAAIjB,EAASM,EAAKM,EAAMC,MAAM,IAAIR,aAC7D,oBAAIY,UAAU,kCACd,mBAAGA,UAAU,YAAb,SAA0BjB,EAASM,EAAKM,EAAMC,MAAM,IAAIV,cACxD,6BACc,KAAZS,EAAMC,MACRb,EAASM,EAAKM,EAAMC,MAAM,IAAIT,SAASc,KAAI,SAACC,GAAD,OAC1C,6BAAKA,iBASHR,ICtCFS,EAAgB,CACzB,CACIC,OAAQ,oCACRC,WAAY,CAAC,iIAAiI,4HAA4H,oEAAqE,wGAEnV,CACID,OAAQ,yCACRC,WAAY,CAAC,6GAA6G,4IAA4I,6NAE1Q,CACID,OAAQ,yDACRC,WAAY,CAAC,0EAA2E,8DAA+D,sGAE3J,CACID,OAAQ,4BACRC,WAAY,CAAC,iHAAkH,+BAAgC,uHCVvK,SAAShB,EAAKC,GAEV,IAAK,IAAIC,KADTC,QAAQC,IAAI,YAAcH,GACZP,EAAU,CAEpB,GADAS,QAAQC,IAAIV,EAASQ,GAAGP,KAAO,YAAcM,GAC1CP,EAASQ,GAAGP,MAAQM,EAInB,OAHAE,QAAQC,IAAIV,EAASQ,GAAGN,OACT,CAACM,EAAGR,EAASQ,GAAGN,MAAOF,EAASQ,GAAGN,QAOvD,SAASqB,EAAcX,GAC1B,OACI,qCACA,8CAAgB,4BAAIZ,EAASM,EAAKM,EAAMC,MAAM,IAAIX,MAAMY,OAAO,KAAQd,EAASM,EAAKM,EAAMC,MAAM,IAAIX,MAAMa,UAAU,EAAGf,EAASM,EAAKM,EAAMC,MAAM,IAAIG,WACtJ,qBAAKQ,MAAM,YAAX,SACA,sBAAKA,MAAM,aAAX,UACI,qBAAKA,MAAM,OAAX,SACI,qBAAKA,MAAM,aAAX,SACI,sBAAKA,MAAM,YAAX,UACI,mBAAGA,MAAM,aAAT,yFACA,mBAAGA,MAAM,YAAT,SACI,6BAAMJ,EAAcF,KAAI,SAACC,GAAD,OAAW,6BAAKA,EAAKE,uBAK7D,qBAAKG,MAAM,OAAOC,MAAO,CAAC,YAAa,IAAK,cAAc,OAAQ,eAAe,QAAjF,SACI,qBAAKD,MAAM,yBAUZD,I,cCjCFG,EAAc,WACvB,OACI,cAAC,IAAD,UACE,sBAAKT,UAAU,oBAAf,UACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMU,GAAG,QAEX,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,UAAT,iBAEF,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,WAAT,iBAEF,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,cAAT,iBAEF,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,UAAT,iBAEF,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,sBAAT,oBAEF,oBAAIV,UAAU,MAAd,SACE,cAAC,IAAD,CAAMU,GAAG,aAAT,sBAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACjB,EAAD,CAAUE,KAAK,QAEjB,cAAC,IAAD,CAAOe,KAAK,WAAZ,SACE,cAACjB,EAAD,CAAUE,KAAK,QAEjB,cAAC,IAAD,CAAOe,KAAK,cAAZ,SACE,cAACL,EAAD,CAAeV,KAAK,QAEtB,cAAC,IAAD,CAAOe,KAAK,UAAZ,SACE,cAACjB,EAAD,CAAUE,KAAK,QAEjB,cAAC,IAAD,CAAOe,KAAK,sBAAZ,SACE,cAACjB,EAAD,CAAUE,KAAK,QAEjB,cAAC,IAAD,CAAOe,KAAK,aAAZ,SACE,cAACjB,EAAD,CAAUE,KAAK,iBClChBgB,EAXH,SAACjB,GACT,OACI,sBAAKK,UAAU,oBAAf,UACI,6CACA,yFACA,cAAC,EAAD,QCTGa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac38b5d6.chunk.js","sourcesContent":["export const stepData = [\n    {\n      step: \"D\",\n      title: \"Define rules:\",\n      description: \"The purpose of this debrief is to help you reflect on the scenario you have just completed in order to help you improve your skills as a paramedic. This debrief will recount the actions you performed, as well as the actions indicated based on the case scenario, and will help you explore areas of discordance. The contents of this debrief are designed to identify areas for improvement and are not designed to assess your abilities as a paramedic.\",\n    },\n    {\n      step: \"E\",\n      title: \"Explain the learning objectives:\",\n      description: `This scenario was designed to give you practice with identifying and managing`,\n      substeps: [\"A patient with life-threatening bleeding\", \"A patient at risk for a cervical injury\", \"A patient who requires a definitive airway and ventilation support\", \"A patient with hemorrhagic shock\"],\n    }, \n    {\n        step: \"B\",\n        title: \"Benchmarks for performance:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"R\",\n        title: \"Review what was supposed to happen:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"I\",\n        title: \"Identify what happened & Examine why:\",\n        description: `Needs implemented`,\n    },\n    {\n        step: \"F\",\n        title: \"Formalize learning:\",\n        subtitle: \"Fill in the following questions to formalize your learning:\",\n        description:\"What is your key take-home point from this case? What is something you want to continue working on or do differently in the future?\",\n    }\n  ];","import React from \"react\";\nimport { tableData } from \"../data\";\nimport { stepData } from \"../steps\";\n\nfunction loop(n) { \n    console.log(\"In loop: \" + n);\n    for (var i in stepData) {\n        console.log(stepData[i].step + \", props: \" + n);\n        if(stepData[i].step == n) {\n            console.log(stepData[i].title);\n            var retArray = [i, stepData[i].title, stepData[i].title]\n            //will return json object number, title, and description\n            return retArray;\n        }\n    }  \n}\n\nexport function CardText(props) {\n    return (\n        <>\n        <p><b>{stepData[loop(props.name)[0]].title.charAt(0)}</b>{stepData[loop(props.name)[0]].title.substring(1, stepData[loop(props.name)[0]].length)}</p>\n        <div className=\"card\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\"><b>{stepData[loop(props.name)[0]].subtitle}</b></h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\"></h6>\n            <p className=\"card-text\">{stepData[loop(props.name)[0]].description}</p>\n            <ol>\n            { props.name==\"E\" && \n            stepData[loop(props.name)[0]].substeps.map((data) => (\n             <li>{data}</li>\n            ))}\n            </ol>\n        </div>\n        </div>\n        </>\n    );\n}\n\nexport default CardText;","export const benchmarkInfo = [\n    {\n        action: \"Stopped life-threatening bleeding\",\n        management: [\"Immediately recognized the need to manage severe bleeding--i.e., when first encountering the patient, during the scene size-up\",\"Immediately applied a tourniquet to the patients right leg, before doing all other actions included in the Primary Survey\",\"Applied the tourniquet as far proximally to the wound as possible\", \"Confirmed that your treatment worked i.e., by checking that bleeding stopped and pulses were absent\"],\n    },\n    {\n        action: \"Stabilized a potential cervical injury\",\n        management: [\"Immediately directed a team member to take manual c-spine stabilization: that is, during the scene size-up\",\"Escalated c-spine stabilization during the Secondary Survey, after assessing the neck, by applying an appropriately sized cervical collar\",\"Fully immobilized the patient prior to transport, by log-rolling the patient onto a backboard while continuing to stabilize the spine and attaching at least three straps, the CID pad, both head blocks, and CID straps\"],\n    },\n    {\n        action: \"Provided a definitive airway and supported ventilation\", \n        management: [\"Opened the airway with a jaw-thrust maneuver, during the Primary Survey\", \"Provided bag-valve mask ventilation with 15 LPM O2 attached\", \"Provided a definitive airway during transport, while continuing to assess and manage the patient:\"],\n    },\n    {\n        action: \"Managed hemorrhagic shock\", \n        management: [\"Kept the patient warm by covering him with a blanket, as soon as shock was detected, during the Primary Survey\", \"Administered supplemental O2\", \"Established two large-bore IVs and bolus NS fluids to a goal BP systolic 90, as soon as possible during transport\"],\n    }\n  ];","import React from \"react\";\nimport { tableData } from \"../data\";\nimport { stepData } from \"../steps\";\nimport { benchmarkInfo } from \"../benchmarksInfo\"; \n\nfunction loop(n) { \n    console.log(\"In loop: \" + n);\n    for (var i in stepData) {\n        console.log(stepData[i].step + \", props: \" + n);\n        if(stepData[i].step == n) {\n            console.log(stepData[i].title);\n            var retArray = [i, stepData[i].title, stepData[i].title]\n            //will return json object number, title, and description\n            return retArray;\n        }\n    }  \n}\n\nexport function TwoDivOutline(props) {\n    return (\n        <>\n        <p>Describe the <b>{stepData[loop(props.name)[0]].title.charAt(0)}</b>{stepData[loop(props.name)[0]].title.substring(1, stepData[loop(props.name)[0]].length)}</p>\n        <div class=\"container\">\n        <div class=\"card-group\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <div class=\"card-body\">\n                        <p class=\"card-title\">Below are management actions you were supposed to perform in this scenario:</p>\n                        <p class=\"card-text\">\n                            <ol>{ benchmarkInfo.map((data) => (<li>{data.action}</li>))}</ol>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card\" style={{\"flex-grow\": \"2\", \"margin-left\":\"20px\", \"margin-right\":\"20px\"}}>\n                <div class=\"card-block\">\n  \n                </div>\n            </div>\n        </div>\n    </div>\n        </>\n    );\n}\n\nexport default TwoDivOutline;","import React from \"react\";\nimport \"../styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CardText } from \"./CardText.js\"\nimport { TwoDivOutline } from \"./TwoDivOutline.js\"\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nexport const MainOutline = () => {\n    return (\n        <Router>\n          <div className=\"outline-container\">\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\"></Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/define\">D</Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/explain\">E</Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/benchmarks\">B</Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/review\">R</Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/identifyAndExamine\">I  E</Link>\n                </li>\n                <li className=\"btn\">\n                  <Link to=\"/formalize\">F</Link>\n                </li>\n              </ul>\n            </nav>\n    \n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/define\">\n                <CardText name=\"D\" />\n              </Route>\n              <Route path=\"/explain\">\n                <CardText name=\"E\" />\n              </Route>\n              <Route path=\"/benchmarks\">\n                <TwoDivOutline name=\"B\" />\n              </Route>\n              <Route path=\"/review\">\n                <CardText name=\"R\" />\n              </Route>\n              <Route path=\"/identifyAndExamine\">\n                <CardText name=\"I\" />\n              </Route>\n              <Route path=\"/formalize\">\n                <CardText name=\"F\" />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      );\n  };","import React from \"react\"\n\nimport {\n    HashRouter as Router,\n    Switch,\n} from \"react-router-dom\"\n\n//import { AuthProvider, PrivateRoute } from \"@meddbriefer/mdb-auth\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./styles.css\";\nimport { MainOutline } from \"./components/MainOutline\"\n\n\n\nconst App = (props) => {\n    return(\n        <div className=\"outline-container\">\n            <p>Self Debrief</p>\n            <p>Click the buttons below to navigate through the debrief.</p>\n            <MainOutline />\n        </div>\n    )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}